import requestsimport jsonimport osfrom dotenv import load_dotenvfrom payments.at_auth import get_access_token  # Import the consolidated authentication function# Load environment variablesload_dotenv()# Safaricom API CredentialsCONSUMER_KEY = os.getenv("SAFARICOM_CONSUMER_KEY")CONSUMER_SECRET = os.getenv("SAFARICOM_CONSUMER_SECRET")SHORTCODE = os.getenv("SAFARICOM_SHORTCODE")  # Your business SMS short codedef get_access_token():    """Generates OAuth access token for Safaricom API."""    url = "https://api.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials"    response = requests.get(url, auth=(CONSUMER_KEY, CONSUMER_SECRET))        if response.status_code == 200:        return response.json().get("access_token")    else:        return Nonedef send_sms(phone_number, message):    """Sends SMS using Safaricom Business SMS API."""    access_token = get_access_token()    if not access_token:        return {"error": "Failed to get access token"}    url = "https://api.safaricom.co.ke/mpesa/sms/v1/send"    headers = {"Authorization": f"Bearer {access_token}", "Content-Type": "application/json"}    payload = {        "shortCode": SHORTCODE,        "to": phone_number,        "message": message    }    response = requests.post(url, headers=headers, json=payload)        if response.status_code == 200:        return response.json()    else:        return {"error": response.text}# Example usage (this is a placeholder for when the SMS is triggered by form input)if __name__ == "__main__":    phone_number = input("Enter phone number: ")  # Dynamically input the phone number    message = "Please enter your M-Pesa PIN to complete the payment."    response = send_sms(phone_number, message)    print(response)